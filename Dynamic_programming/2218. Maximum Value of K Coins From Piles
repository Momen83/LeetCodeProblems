class Solution {
public:
    int dp[1001][2001];
    
    int solve(vector<vector<int>>& piles,int idx , int k){
        if(k ==0) {
            return 0;
        }
        if(idx ==piles.size()) {
            return -1e9;
        }
     

        int &ret = dp[idx][k];

        if(ret!=-1){
            return ret;
        }

        ret =0;
    
        int sum = 0;
        for(int c = 0 ; c<piles[idx].size() ; c++) {
            sum +=piles[idx][c];
            ret = max(ret , solve(piles , idx + 1 , k));
            if( c + 1 <=k){
                ret = max(ret, solve(piles , idx + 1 , k- (c + 1)) + 
                sum);
            }
        }

        return ret;
    }
    int maxValueOfCoins(vector<vector<int>>& piles, int k) {
        memset(dp , -1 ,sizeof(dp));
        return solve(piles , 0 , k);
    }
};
